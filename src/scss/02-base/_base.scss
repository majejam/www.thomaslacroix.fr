// ========================================================================================
// Base | Default, single element selectors that will look the same regardless of location.
// ========================================================================================

/**
 * High-, page-level styling.
 *
 * 1. Force scrollbars to always be visible to prevent awkward ‘jumps’ when
 *    navigating between pages that do/do not have enough content to produce
 *    scrollbars naturally.
 * 2. Ensure the page always fills at least the entire height of the viewport.
 * 3. Prevent certain mobile browsers from automatically zooming fonts.
 */

html {
  text-size-adjust: 100%; /* [3] */
  // Mobile First Approach
  // Refer to https://prowebtype.com/setting-type/
  font-family: var(--font-primary), serif;
  font-size: 100%;
  // line-height: 1.6;
  font-weight: 400;
  margin: 0 auto;
  // padding: 2em; // padding so that bullet list don't touche the edge of the screen
  text-align: left;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  overscroll-behavior: none;
}

body,
html {
  width: 100%;
  height: 100%;
  margin: 0;
  padding: 0;
  color: var(--color-white);
  background: var(--color-black);
  overscroll-behavior: none;
  cursor: none;
}

.app {
  height: 100%;
}

// ---------------------------------
// GENERAL SETTINGS
// ---------------------------------

body {
  font-family: var(--font-primary);
}

p,
a,
ul,
blockquote,
figcaption {
  font-family: var(--font-primary);
  color: var(--color-grey-50);
  line-height: 1.5;
}

img {
  height: auto;
  width: 100%;
}

/**
 * Easily find images without an alt tag
 * source: https://twitter.com/jdjuan/status/1022301088651853824?s=21
 */
img:not([alt]) {
	filter: grayscale(100%);
}

button {
  cursor: pointer;
}

// Use CSS attribute selectors to display links
// when <a> has no text value but the `href` has a link.
a[href^="http"]:empty::before {
  content: attr(href);
}

// Taken from : https://github.com/alphagov/govuk-frontend/blob/master/src/globals/scss/core/_links.scss#L28
@include mq($media-type: print) {
  // When printing, append the the destination URL to the link text, as long
  // as the URL starts with either `/`, `http://` or `https://`.
  a[href^="/"],
  a[href^="http://"],
  a[href^="https://"] {
    &::after {
      content: " (" attr(href) ")";
      font-size: 90%;

      // Because the URLs may be very long, ensure that they may be broken
      // at arbitrary points if there are no otherwise acceptable break
      // points in the line
      word-wrap: break-word;
    }
  }
}


::selection {
  background: var(--color-primary);
  color: var(--color-white);
  text-shadow: none;
}
